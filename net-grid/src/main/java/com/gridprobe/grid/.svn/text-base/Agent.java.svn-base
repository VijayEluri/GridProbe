package com.gridprobe.grid;

import java.util.Set;


public interface Agent {

	/**
	 * The unique ID of this agent
	 */
	public Id id() 
	;
	
	/**
	 * Send a message to this agent. Note that this action is asynchronous
	 * meaning that when this call is over there's no guarantee that
	 * this message is delivered - please look at the report
	 * 
	 * @param message	the message I want to send
	 * @return	the report containing info about the delivery of the message
	 * @throws GridException
	 */
	public Report send(Message message) throws GridException
	;
	
	/**
	 * Send a message to this agent. Note that this action is asynchronous
	 * meaning that when this call is over there's no guarantee that
	 * this message is delivered - please look at the report
	 * 
	 * @param message	the message I want to send
	 * @param callback	a callback where I can receive info about th status of the delivery
	 * @return	the report containing info about the delivery of the message
	 * @throws GridException
	 */
	public Report send(Message message, MessageCallback callback) throws GridException
	;
	
	/**
	 * Return the list of endpoints available for this agent
	 * 
	 * @return	list of endpoints
	 */
	public Set<Endpoint> endpoints() 
	;
	
	/**
	 * The callback interface triggered
	 * when a message is sent
	 * 
	 * @author bossola
	 */
	public static interface MessageCallback {
		
		public void onSuccess (Report report)
		;
		
		public void onFailure (Report report)
		;
	}

	/**
	 * A simple class to map the agent id
	 * @author bossola
	 */
	public static class Id {
		private Long value;

		public Id(long value) {
			this.value = value;
		}

		public Long toLong() {
			return value;
		}
		
		@Override
		public String toString() {
			return value.toString();
		}
		
		@Override
		public int hashCode() {
			return value.hashCode();
		}

		@Override
		public boolean equals(Object obj) {
			try {
				return ((Id)obj).value == this.value;
			}
			catch (Exception ex) {
				return false;
			}
		}
	}

}
